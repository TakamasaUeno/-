KbName('UnifyKeyNames');
DisableKeysForKbCheck([240, 243, 244]);


audioFile = 'ビープ音4.mp3';
[y, fs] = audioread(audioFile);

trial_data = cell(numTrials, 4);
pre_key = [];
quit_key = 'ESCAPE';
quit_key = KbName(quit_key);
pre_key_letter = [quit_key];
flag_halt = 0;
close all
fig_test = class_figure(2);
fig_test = fig_test.figure;
fig_test = fig_test.string('+');
for trial = 1:numTrials
    fig_test = fig_test.set_string('+');

    pause(1);

    limit_time = cell2mat(randlist_vocab_all((runs-1)*numTrials + trial, 4));
    fig_test = fig_test.set_string(limit_time);

    pause(1);

    target_word =char(randlist_vocab_all((runs-1)*numTrials + trial, 3));
    home
    ListenChar(2);
    count_word_letter=1;
    target_key = KbName(target_word(count_word_letter));
    fig_test = fig_test.set_string(target_word);
    drawnow

    keyCode(:, :) = 0;
    keyIsKeptDown = 0;
    start_time = GetSecs;
    keyCode_pre = [];
    while 1 == 1
        [keyIsDown, secs, keyCode, deltaSecs] = KbCheck();
        %fprintf('t');
        if isequal(keyCode_pre,keyCode) && keyIsDown
            %fprintf('same key patterns were detected \n');
            keyIsKeptDown = 1;
        elseif keyIsDown
            %fprintf('different key patterns were detected \n');
            keyIsKeptDown = 0;
            keyCode_pre = keyCode;
        else
            keyIsKeptDown = 0;
            keyCode_pre = keyCode;
        end
        if keyIsDown && ~keyIsKeptDown
            if keyCode(quit_key) == 1
                fprintf('Escape pressed\n');
                flag_halt = 1;
                break;
            end
            
            if keyCode(target_key) == 1
                fprintf('%c was pressed\n',target_word(count_word_letter));

                pre_key = target_key;
                pre_key_letter = target_key;
                count_word_letter = count_word_letter + 1;
                if count_word_letter > numel(target_word)
                    fprintf('input done\n');
                    randlist_vocab_all((runs-1)*numTrials + trial, l + 1) = num2cell(1);
                    if limit_time == 2
                        correct1 = correct1+1;
                    elseif limit_time == 4
                        correct2 = correct2+1;
                    elseif limit_time == 6
                        correct3 = correct3+1;
                    end
                    break

                end
                target_key = KbName(target_word(count_word_letter));
                keyCode(target_key) = 0;
                continue
            end
            if any(keyCode([1:239,241:242,245:end]) == 1)
                if keyCode(target_key) ~= 1 && keyCode(pre_key) ~= 1 % && pre_key ~= quit_key
                    fprintf('Fail: Type miss\n');
                    fig_test = fig_test.set_string('F');
                    sound(y, fs);
                    randlist_vocab_all((runs-1)*numTrials + trial, l + 1) = num2cell(-1);
                    pause(0.5);
                    break
                elseif keyCode(target_key) ~= 1 && keyCode(pre_key_letter) == 1 && pre_key == quit_key
                    fprintf('Fail: Type miss again\n');
                    fig_test = fig_test.set_string('F');
                    sound(y, fs);
                    randlist_vocab_all((runs-1)*numTrials + trial, l + 1) = num2cell(-1);
                    pause(0.5);
                    break
                end
            end

        elseif ~keyIsDown
            pre_key = quit_key;
        end
        if GetSecs-start_time > limit_time
            fprintf('Fail: Time over\n');
            sound(y, fs);
            randlist_vocab_all((runs-1)*numTrials + trial, l + 1) = num2cell(-2);
            pause(0.5);
            break
        end
        WaitSecs(0.001);
    end
    finish_time = GetSecs;
    fprintf('%0.3f s passsed\n',finish_time-start_time);

    if limit_time == 2
        counter1 = counter1+1;
    elseif limit_time == 4
        counter2 = counter2+1;
    elseif limit_time == 6
        counter3 = counter3+1;
    end

    if isequal(randlist_vocab_all((runs-1)*numTrials + trial, l+1), num2cell(1))
        randlist_vocab_all((runs-1)*numTrials + trial, l + 2) = num2cell(finish_time-start_time);
    else
        randlist_vocab_all((runs-1)*numTrials + trial, l + 2) = {'NaN'};

    end

    if flag_halt
        fprintf('Experiment halt\n');
        break;
    end
end
ListenChar(0);
fig_test = fig_test.set_string('Session is over');
% pause(10);